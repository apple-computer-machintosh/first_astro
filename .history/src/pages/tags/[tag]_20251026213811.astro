---
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob("../posts/*.md", { eager: true })
  );

  const uniqueTags = [
    ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props as {
  posts: Array<{
    frontmatter: { tags?: string[]; title: string };
    url: string;
  }>;
};
const filteredPosts = posts.filter((post) =>
  post.frontmatter.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
  <p>{tag}のタグが付いた記事</p>
  <ul>
    {
      filteredPosts.map((post: any) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
